{"ast":null,"code":"var _jsxFileName = \"/Users/carladelgado/CS/BusControlTool/bus-tool/src/App.js\";\nimport logo from './logo.svg';\nimport { Table } from './components/table';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport React, { useState } from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'https://hn.algolia.com/api/v1/search?query=';\nconst DEFAULT_QUERY = 'redux';\n\nclass App extends React.Component {\n  /*const [token, setToken] = useState();*/\n  constructor(props) {\n    super(props);\n    this.state = {\n      bus: []\n    };\n    this.headers = [{\n      key: 'run',\n      label: 'Run'\n    }, {\n      key: 'run_relief',\n      label: 'Run Relief'\n    }, {\n      key: 'bus',\n      label: 'Bus'\n    }, {\n      key: 'time_due',\n      label: 'Time Due'\n    }, {\n      key: 'expected',\n      label: 'Expected'\n    }, {\n      key: 'recommended',\n      label: 'Recommended'\n    }, {\n      key: 'executed',\n      label: 'Exectuted'\n    }];\n    /*\n    this.state = { checkedBoxes: [] };\n    this.cancelTrip = this.cancelTrip.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    */\n  }\n  /*\n  cancelTrip = (event) => {\n      event.preventDefault();\n      if(window.confirm('Are you sure, want to cancel the selected trip(s)?')) {\n          alert(this.state.checkedBoxes + \" Succesfully Deleted\");\n      }\n  }\n   \n  toggleCheckbox = (e, item) => {      \n      if(e.target.checked) {\n          let arr = this.state.checkedBoxes;\n          arr.push(item.id);\n           \n          this.setState = { checkedBoxes: arr};\n      } else {            \n          let items = this.state.checkedBoxes.splice(this.state.checkedBoxes.indexOf(item.id), 1);\n           \n          this.setState = {\n              checkedBoxes: items\n          }\n      }       \n      console.log(this.state.checkedBoxes);\n  }\n  */\n\n\n  componentDidMount() {\n    fetch('mock-data.json').then(response => response.json()).then(data => this.setState({\n      hits: data.hits\n    })).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n    /*\n    .then(result => {\n      // Work with JSON data here\n      console.log(result);\n      this.setState({\n          bus_rs:result\n      }); \n    }).catch(err => {\n      // Do something for an error here\n      console.log(\"Error Reading data \" + err);\n    });\n    */\n  }\n\n  render() {\n    //const busFound = this.state.bus_rs && this.state.bus_rs.length;\n    const {\n      hits\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/dashboard\",\n                element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/Login\",\n                element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 53\n                }, this),\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ReactJS Fetch Data from JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"msg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: this.headers.map(function (h) {\n                return /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: h.label\n                }, h.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: hits.map(hit => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: hit.url,\n                  children: hit.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 13\n                }, this)\n              }, hit.objectID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this);\n  }\n  /*\n  return (\n    <Router> \n      <div className=\"App\">\n        <Navbar/>\n        <div className='content'>\n          <Routes>\n            <Route path={\"/\"} element={<Home/>}></Route>\n            <Route path={\"/dashboard\"} element={<Dashboard/>}></Route>\n            <Route path={\"/Login\"} element={<Login/>}> </Route>\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n  */\n\n\n}\n\nexport default App;","map":{"version":3,"names":["logo","Table","BrowserRouter","Router","Route","Routes","Navbar","Home","Login","Dashboard","React","useState","HashRouter","API","DEFAULT_QUERY","App","Component","constructor","props","state","bus","headers","key","label","componentDidMount","fetch","then","response","json","data","setState","hits","catch","error","isLoading","render","map","h","hit","url","title","objectID"],"sources":["/Users/carladelgado/CS/BusControlTool/bus-tool/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport { Table } from './components/table'\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport React, { useState } from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport './App.css';\n\nconst API = 'https://hn.algolia.com/api/v1/search?query=';\nconst DEFAULT_QUERY = 'redux';\n\nclass App extends React.Component {\n  /*const [token, setToken] = useState();*/\n\n  constructor(props) {\n    super(props);\n    this.state = {bus: []};\n    this.headers = [\n        { key: 'run', label: 'Run'},\n        { key: 'run_relief', label: 'Run Relief' },\n        { key: 'bus', label: 'Bus' },\n        { key: 'time_due', label: 'Time Due' },\n        { key: 'expected', label: 'Expected' },\n        { key: 'recommended', label: 'Recommended' },\n        { key: 'executed', label: 'Exectuted' }\n    ];\n    /*\n    this.state = { checkedBoxes: [] };\n    this.cancelTrip = this.cancelTrip.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    */\n}\n \n/*\ncancelTrip = (event) => {\n    event.preventDefault();\n    if(window.confirm('Are you sure, want to cancel the selected trip(s)?')) {\n        alert(this.state.checkedBoxes + \" Succesfully Deleted\");\n    }\n}\n \ntoggleCheckbox = (e, item) => {      \n    if(e.target.checked) {\n        let arr = this.state.checkedBoxes;\n        arr.push(item.id);\n         \n        this.setState = { checkedBoxes: arr};\n    } else {            \n        let items = this.state.checkedBoxes.splice(this.state.checkedBoxes.indexOf(item.id), 1);\n         \n        this.setState = {\n            checkedBoxes: items\n        }\n    }       \n    console.log(this.state.checkedBoxes);\n}\n*/\n \ncomponentDidMount() {\n    fetch('mock-data.json')\n      .then(response => response.json())\n      .then(data => this.setState({ hits: data.hits }))\n      .catch(error => this.setState({ error, isLoading: false }));\n      /*\n      .then(result => {\n        // Work with JSON data here\n        console.log(result);\n        this.setState({\n            bus_rs:result\n        }); \n      }).catch(err => {\n        // Do something for an error here\n        console.log(\"Error Reading data \" + err);\n      });\n      */\n}\n     \nrender() {\n    //const busFound = this.state.bus_rs && this.state.bus_rs.length;\n    const { hits } = this.state;\n    return (\n          <div>\n            <Router>\n              <div className=\"App\">\n                <Navbar />\n                <div className='content'>\n                  <Routes>\n                    <Route path={\"/\"} element={<Home />}></Route>\n                    <Route path={\"/dashboard\"} element={<Dashboard />}></Route>\n                    <Route path={\"/Login\"} element={<Login />}> </Route>\n                  </Routes>\n                </div>\n              </div>\n            </Router>\n          <div className=\"container\"><h1>ReactJS Fetch Data from JSON</h1>\n              <div id=\"msg\"></div>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    {this.headers.map(function (h) {\n                      return (\n                        <th key={h.key}>{h.label}</th>\n                      );\n                    })}\n                  </tr>\n                </thead>\n                <tbody>\n                <ul>\n        {hits.map(hit =>\n          <li key={hit.objectID}>\n            <a href={hit.url}>{hit.title}</a>\n          </li>\n        )}\n      </ul>\n                </tbody>\n              </table>\n            </div>\n            </div>\n        )\n  }\n\n  /*\n  return (\n    <Router> \n      <div className=\"App\">\n        <Navbar/>\n        <div className='content'>\n          <Routes>\n            <Route path={\"/\"} element={<Home/>}></Route>\n            <Route path={\"/dashboard\"} element={<Dashboard/>}></Route>\n            <Route path={\"/Login\"} element={<Login/>}> </Route>\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n  */\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}