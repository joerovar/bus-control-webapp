{"ast":null,"code":"var _jsxFileName = \"/Users/carladelgado/CS/BusControlTool/bus-tool/src/components/table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from './mock-data.json';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Table = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const table = useTable({\n    columns: columns,\n    data: data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"ZnA/apEdCjMe4gBEXBLA1IwFxGI=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","Table","columns","data","table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/carladelgado/CS/BusControlTool/bus-tool/src/components/table.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './mock-data.json'\nimport { COLUMNS } from './columns'\nimport './table.css'\n\nexport const Table = () => {\n\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const table = useTable({\n        columns: columns,\n        data: data\n    })\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, } = table\n\n  return (\n    <table {...getTableProps()}>\n        <thead>\n            {headerGroups.map((headerGroup) => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column) => (\n                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                    ))}\n                </tr>\n            ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n            {\n                rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map( cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })\n            }\n        </tbody>\n    </table>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAEvB,MAAMC,OAAO,GAAGL,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAAvB;EACA,MAAMG,IAAI,GAAGN,OAAO,CAAC,MAAME,SAAP,EAAkB,EAAlB,CAApB;EAEA,MAAMK,KAAK,GAAGN,QAAQ,CAAC;IACnBI,OAAO,EAAEA,OADU;IAEnBC,IAAI,EAAEA;EAFa,CAAD,CAAtB;EAKA,MAAM;IAAEE,aAAF;IAAiBC,iBAAjB;IAAoCC,YAApC;IAAkDC,IAAlD;IAAwDC;EAAxD,IAAwEL,KAA9E;EAEF,oBACE,sBAAWC,aAAa,EAAxB;IAAA,wBACI;MAAA,UACKE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;QAAA,UACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACrB,mBAAQA,MAAM,CAACC,cAAP,EAAR;UAAA,UAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;QAAlC;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAUI,sBAAWV,iBAAiB,EAA5B;MAAA,UAEQE,IAAI,CAACE,GAAL,CAASO,GAAG,IAAI;QACZR,UAAU,CAACQ,GAAD,CAAV;QACA,oBACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;UAAA,UACKD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAI,IAAI;YACpB,oBAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;cAAA,UAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;YAA9B;cAAA;cAAA;cAAA;YAAA,QAAP;UACH,CAFA;QADL;UAAA;UAAA;UAAA;QAAA,QADJ;MAOH,CATD;IAFR;MAAA;MAAA;MAAA;IAAA,QAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CAvCM;;GAAMf,K;UAKKH,Q;;;KALLG,K"},"metadata":{},"sourceType":"module"}